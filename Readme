Made By: Hassan Abbas
Email: hassan.abbas@helsinki.fi

Instructions: The program is made as ruby script. It can be run on terminal by giving command: ruby driver.rb. All three programs must be in the same directory otherwise driver program cannot be executed. Password free environment is required to access different nodes of ukko cluster. Place all the three programs in your home directory or from where you need to run the program. Copies of all the programs must also be placed on ukko cluster such that when the driver executes the program on ukko cluster it should find the respective files.

Modules: The program comprises of driver.rb, main.rb, bully_process.rb and a configuration file.

Execution Process:
The driver.rb launches the program on different ukko nodes using the ssh method providing the configuration file and the line_num as specified in the assignment. It calls the main.rb program which makes an object of class bully_process and further calls its method to trigger the algorithm. First the initial cordinator(process with the highest id) is set up such that other processes start pinging the cordinator. Every process pings the cordinator after five seconds. If the initial cordinator is still alive it will respond to those messages. Once the initial cordinator terminates, the process who notices first that initial cordinator is not replying(waits for five seconds) sends out the election message to all the process ids with higher number than his. Every process sends out the election messages to the processes which are having a higher id number than his. The process with the second largest id number when receives no reply from the initial cordinator broadcasts to other processes that he is now the current cordinator. Other processes upon receiving the new cordinator message starts to ping that cordinator. This process continues until the last process is alive who sends out the election messages and receives no reply announces himself as the new cordinator. Algorithm is implemented assuming that network connection is stable and messages are not lost.
